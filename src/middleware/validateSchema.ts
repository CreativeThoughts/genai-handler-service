import { Request, Response, NextFunction } from "express"; import { z } from "zod"; import { ApiError } from "./errorHandler"; export const validateSchema = <T>(schema: z.ZodType<T>) => (req: Request, res: Response, next: NextFunction) => { try { req.body = schema.parse(req.body); next(); } catch (error) { if (error instanceof z.ZodError) { const err = new Error("Validation error: " + error.errors.map(e => `${e.path.join(".")}: ${e.message}`).join(", ")) as ApiError; err.statusCode = 400; next(err); } else { next(error); } } };
